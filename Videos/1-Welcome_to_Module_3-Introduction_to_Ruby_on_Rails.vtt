WEBVTT

1
00:00:00.445 --> 00:00:10.445
[MUSIC]

2
00:00:12.594 --> 00:00:14.870
Hi, and welcome to Module 3.

3
00:00:14.870 --> 00:00:19.490
In Module 2, our previous module,
we talked about Ruby and by now,

4
00:00:19.490 --> 00:00:23.050
you guys should have enough knowledge
to jump into Ruby on Rails and

5
00:00:23.050 --> 00:00:25.390
that is exactly what we are going
to be doing in this module.

6
00:00:26.550 --> 00:00:30.981
We'll start off the module by talking
about the core principles of Ruby on

7
00:00:30.981 --> 00:00:32.110
Rails.

8
00:00:32.110 --> 00:00:35.330
We'll talk about model view controller and

9
00:00:35.330 --> 00:00:40.030
actually model view controller is not just
a principle that apples to Ruby on Rails.

10
00:00:40.030 --> 00:00:44.130
It's a principle that applies to
a lot of web frameworks as well.

11
00:00:44.130 --> 00:00:47.290
Then will talk about
convention over configuration.

12
00:00:47.290 --> 00:00:52.370
And basically the idea there is that there
are some good conventions that Rails

13
00:00:52.370 --> 00:00:57.264
pushes you to follow, and you could step
outside those conventions if you want.

14
00:00:57.264 --> 00:01:00.630
But it's a very good idea
to follow conventions, and

15
00:01:00.630 --> 00:01:04.138
this way the applications
that are built faster,

16
00:01:04.138 --> 00:01:08.730
and that's what Rails is very famous for,
for rapid prototyping.

17
00:01:08.730 --> 00:01:10.760
Allowing it to build
applications very fast.

18
00:01:12.040 --> 00:01:18.060
One of those conventions is using the same
directory structure for your application.

19
00:01:18.060 --> 00:01:21.877
And this is actually great because you
work in the one Rails application,

20
00:01:21.877 --> 00:01:26.120
you know the directory structure, and
then when you move onto the next project,

21
00:01:26.120 --> 00:01:28.200
you know exactly where things go,
which is great.

22
00:01:29.580 --> 00:01:34.670
Then we're gonna move on and
find out how to generate a controller and

23
00:01:34.670 --> 00:01:39.210
a view in Rails, and
build some pages that are dynamic.

24
00:01:40.440 --> 00:01:43.160
And by the time we get
to the end of a module,

25
00:01:43.160 --> 00:01:47.900
we'll be able to build a functional
recipe finder application.

26
00:01:47.900 --> 00:01:49.190
Now, there's a little problem.

27
00:01:50.360 --> 00:01:53.781
To build a recipe finder application,
you need to have data.

28
00:01:53.781 --> 00:01:55.550
You need to have recipes.

29
00:01:55.550 --> 00:01:58.620
And usually that data would
be stored in a database.

30
00:01:58.620 --> 00:02:03.710
Now we haven't talked about databases and
we're not going to in this course.

31
00:02:03.710 --> 00:02:06.290
The next course,
we'll talk about databases.

32
00:02:06.290 --> 00:02:08.880
But we have to build
the application in this course.

33
00:02:08.880 --> 00:02:09.800
So how are we going to do that?

34
00:02:10.970 --> 00:02:12.260
Well, as you're going to see,

35
00:02:12.260 --> 00:02:17.920
there's a way that Ruby lets you pull data
from the Internet, from a web service,

36
00:02:17.920 --> 00:02:22.480
and easily integrate that data into
your Ruby on Rails application.

37
00:02:22.480 --> 00:02:25.393
And that is how we're gonna
build our web application.

38
00:02:25.393 --> 00:02:30.000
In the last module,
we talked about unit testing with RSpec.

39
00:02:31.690 --> 00:02:32.420
In this module,

40
00:02:32.420 --> 00:02:37.700
we'll talk about a different concept,
which is similar, called blackbox testing.

41
00:02:37.700 --> 00:02:40.390
And the idea there is that
you don't have to have a code

42
00:02:40.390 --> 00:02:44.770
that you're testing against,
you're just testing against the blackbox.

43
00:02:44.770 --> 00:02:48.476
So this way you could test against
the code that's up there in

44
00:02:48.476 --> 00:02:49.863
the cloud if you want.

45
00:02:49.863 --> 00:02:53.482
And that's exactly what we're
gonna do using RSpec and

46
00:02:53.482 --> 00:02:56.178
using the Capybara, which is a Ruby gem.

47
00:02:56.178 --> 00:03:01.404
[MUSIC]

48
00:03:01.404 --> 00:03:05.128
So as I mentioned,
we're gonna build a functional recipe

49
00:03:05.128 --> 00:03:08.092
finder application by
the end of this module,

50
00:03:08.092 --> 00:03:12.660
which is gonna be sort of a project
that's gonna finish off the course.

51
00:03:13.910 --> 00:03:17.420
Now there's a philosophical
dilemma that I have for you guys.

52
00:03:17.420 --> 00:03:21.540
If you build an application but
your friends, your coworkers, or

53
00:03:21.540 --> 00:03:26.940
your potential employers don't see it,
did you really build that web application?

54
00:03:26.940 --> 00:03:27.800
Probably not.

55
00:03:27.800 --> 00:03:29.753
So to be able to broadcast it,

56
00:03:29.753 --> 00:03:35.570
we are gonna deploy the application to
a cloud service for everybody else to see.

57
00:03:35.570 --> 00:03:37.705
And with that I will see you in Module 3.